name: Deploy to Cloud Run

on:
  workflow_run:
    workflows: ["CI/CD"]
    types:
      - completed
    branches: [ main ]

jobs:
  deploy:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Configure Docker to use gcloud as credential helper
      run: gcloud auth configure-docker us-central1-docker.pkg.dev
    
    - name: Create Artifact Registry repository
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        REPO_NAME: ${{ github.event.repository.name }}
        REGION: us-central1
      run: |
        # Check if repository exists, create if it doesn't
        if ! gcloud artifacts repositories describe $REPO_NAME --location=$REGION >/dev/null 2>&1; then
          echo "Creating Artifact Registry repository: $REPO_NAME"
          gcloud artifacts repositories create $REPO_NAME \
            --repository-format=docker \
            --location=$REGION \
            --description="Docker repository for $REPO_NAME"
        else
          echo "Repository $REPO_NAME already exists"
        fi
    
    - name: Build and push Docker image
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        REPO_NAME: ${{ github.event.repository.name }}
        REGION: us-central1
      run: |
        # Build the Docker image
        docker build -t $REGION-docker.pkg.dev/$GCP_PROJECT_ID/$REPO_NAME/$REPO_NAME:$GITHUB_SHA .
        docker build -t $REGION-docker.pkg.dev/$GCP_PROJECT_ID/$REPO_NAME/$REPO_NAME:latest .
        
        # Push the Docker image to Artifact Registry
        docker push $REGION-docker.pkg.dev/$GCP_PROJECT_ID/$REPO_NAME/$REPO_NAME:$GITHUB_SHA
        docker push $REGION-docker.pkg.dev/$GCP_PROJECT_ID/$REPO_NAME/$REPO_NAME:latest
    
    - name: Deploy to Cloud Run
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        SERVICE_NAME: ${{ github.event.repository.name }}
        REPO_NAME: ${{ github.event.repository.name }}
        REGION: us-central1
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image $REGION-docker.pkg.dev/$GCP_PROJECT_ID/$REPO_NAME/$REPO_NAME:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --port 8080 \
          --memory 512Mi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --timeout 300 \
          --set-env-vars="NODE_ENV=production"
    
    - name: Get service URL
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        SERVICE_NAME: ${{ github.event.repository.name }}
        REGION: us-central1
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format="value(status.url)")
        echo "ðŸš€ Service deployed successfully at: $SERVICE_URL"